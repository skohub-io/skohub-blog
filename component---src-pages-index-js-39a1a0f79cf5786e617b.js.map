{"version":3,"file":"component---src-pages-index-js-39a1a0f79cf5786e617b.js","mappings":"uIA+CA,IArCY,KAAO,IAAD,IAChB,MAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAkBtBC,EAA+B,QAAzB,EAAGF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAAoC,QAAzB,EAAGL,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,YAE5C,OACE,uBAAMC,UAAU,QACbJ,aAAM,EAANA,EAAQK,OACR,2BACC,yBACGF,EAAW,IACP,8BACsB,8BAASH,EAAOK,MAAc,MAIzD,C,oFCwCV,UA5EkB,IAAyB,IAAD,MAAvB,KAAEP,EAAI,SAAEQ,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAT,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBM,QAAK,QACzCC,EAAQX,EAAKY,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAACN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAG,CAACC,MAAM,cACX,gBAAC,IAAG,MACJ,yBAAG,8JAUP,gBAAC,IAAM,CAACF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAG,CAACC,MAAM,cACX,gBAAC,IAAG,MACJ,sBAAIJ,UAAU,cACXK,EAAMI,KAAIC,IAAS,IAAD,EACjB,MAAMN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,KAAMb,UAAU,gBACnC,2BACEA,UAAU,iBACVe,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYf,KAG/B,6BAAQM,EAAKC,YAAYS,OACR,QAAhB,EAAAV,EAAKC,mBAAW,aAAhB,EAAkBU,UACjB,iCACO,IAEL,IACCX,EAAKC,YAAYU,QAAQZ,KAAI,CAACb,EAAQ0B,IAEnC,wBAAMR,IAAK,SAAWQ,GACnB1B,EAAO2B,UAAS,IAEhB3B,EAAO4B,SACPF,EAAQZ,EAAKC,YAAYU,QAAQb,OAAS,EAAI,KAAY,QAQvE,+BACE,qBACEiB,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYZ,aAAeW,EAAKiB,SAE/CR,SAAS,kBAIZ,KAIJ,C","sources":["webpack://skohub-blog/./src/components/bio.js","webpack://skohub-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n          social {\n            mastodon\n            github\n          }\n          description\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const description = data.site.siteMetadata?.description\n\n  return (\n    <div  className=\"bio\">\n      {author?.name && (\n       <div>\n        <p>\n          {description}\n          {` `}\n          This blog is maintained by <strong>{author.name}</strong>.\n        </p>\n       </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <ul className=\"blog-posts\">\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug} className=\"is-blog-post\">\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                  {post.frontmatter?.authors && (\n                    <small>\n                      {` `}\n                      |\n                      {` `} \n                      {post.frontmatter.authors.map((author, index) => {\n                        return(\n                          <span key={\"author\" + index}>\n                            {author.firstname}\n                            {` `}\n                            {author.lastname}\n                            {index < post.frontmatter.authors.length - 1 ? ',\\u00A0' : ''}\n                          </span>\n                        )\n                      })}\n                    </small>\n                  )\n                }\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`{\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n    nodes {\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        authors {\n          lastname\n          firstname\n        }\n      }\n    }\n  }\n}`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","description","className","name","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","authors","index","firstname","lastname","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}