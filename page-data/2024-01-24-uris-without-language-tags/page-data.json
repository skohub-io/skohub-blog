{"componentChunkName":"component---src-templates-blog-post-js","path":"/2024-01-24-uris-without-language-tags/","result":{"data":{"site":{"siteMetadata":{"title":"Skohub Blog"}},"markdownRemark":{"id":"5b5b6759-4145-563a-a1f9-359045844318","excerpt":"In the past: Internationalization with drawbacks If you have worked with SkoHub Vocabs before, you might have noticed that the URLs in the address bar had a…","html":"<h2>In the past: Internationalization with drawbacks</h2>\n<p>If you have worked with SkoHub Vocabs before, you might have noticed that the URLs in the address bar had a little special feature that you don’t encounter very often, a language tag before the <code class=\"language-text\">.html</code>:</p>\n<p><code class=\"language-text\">https://skohub.io/dini-ag-kim/hochschulfaechersystematik/heads/master/w3id.org/kim/hochschulfaechersystematik/scheme.de.html</code></p>\n<p>Why did we need this?</p>\n<p>We wanted Internationalization features to be able to navigate multiple languages.\nNormally this is done via a subdomain or adding a language tag behind the domain name like <code class=\"language-text\">https://w3id.org/kim/hochschulfaechersystematik/en/</code>.\nBut this does not work for SkoHub Vocabs since the we use the URIs from the turtle files as IDs for the concept.\nChanging the URI by adding a language tag somewhere would break the whole concept of SkoHub Vocabs.</p>\n<p>So it was decided to add the language at the end of the URL by using Apache Multiviews features.\nBut this lead to some drawbacks:</p>\n<ul>\n<li>SkoHub Vocabs needed to be served by an Apache Webserver</li>\n<li>The webserver needed special configuration</li>\n<li><a href=\"https://github.com/skohub-io/skohub-docker-vocabs\">SkoHub Docker Vocabs</a>, which is served via GitHub Pages, always needed a specific link to an index.{language}.html file, since GitHub Pages only looks for an <code class=\"language-text\">index.html</code></li>\n<li>The build directory grew quite a bit, since there were dedicated html pages built for every language</li>\n</ul>\n<h2>Switching to one page for all languages</h2>\n<p>In order to overcome these issues we decided to change this behaviour and just build one html page with a functionality to switch languages. The shown language is now chosen the following way:</p>\n<ul>\n<li>by using your browser language</li>\n<li>if you switched languages in the application the chosen language is taken</li>\n<li>if a language is not present, a default language present in the vocabulary is used</li>\n</ul>\n<p>To point users to a specific language, you can use a query parameter <code class=\"language-text\">lang=</code> like:</p>\n<p><code class=\"language-text\">https://w3id.org/kim/hcrt/scheme?lang=uk</code></p>\n<p>Since SkoHub Vocabs also used the language tag of the URL internally to determine which language to serve a lot of changes had to be done in the codebase.\nBut overall this resulted in a much reduced size of the built vocabularies and more flexibility on serving the vocabularies.</p>\n<h2>Benefits of the new approach</h2>\n<p>This new internationalization approach brings lots of improvements:</p>\n<ul>\n<li>SkoHub Vocabs is now independent from the underlying webserver</li>\n<li>The size of the vocabularies is drastically reduced, especially for vocabularies with lots of languages</li>\n<li><a href=\"https://github.com/skohub-io/skohub-docker-vocabs\">SkoHub Docker Vocabs</a> is now simpler to setup since we only have “normal” <code class=\"language-text\">index.html</code> files that it knows how to handle</li>\n</ul>\n<h2>What to do if I’m running my own webhook server?</h2>\n<p>If you are running your own webhook server, you should upgrade the following way:</p>\n<ul>\n<li>Follow the steps outlined in the webhook repository to <a href=\"https://github.com/skohub-io/skohub-webhook#rebuilding-vocabularies\">rebuild vocabularies</a>. This will rebuild all still existing branches you are currently serving.</li>\n<li>Set up a redirect in your apache config, so that links that still have <code class=\"language-text\">...de.html</code> will be redirected to <code class=\"language-text\">...html?lang=de</code>:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Redirect from ...filename.LANGCODE.html to ...filename.html?lang=LANGCODE\n        RewriteRule ^(.+)\\.([a-z]{2})\\.html$ $1.html?lang=$2 [L,R=301]</code></pre></div>\n<ul>\n<li>After that you should be good!</li>\n</ul>\n<h2>Anything else?</h2>\n<p>During developing the script to rebuild all existing vocabularies, I noticed that we are serving a lot of branches that do not exist anymore.\nSkoHub Webhook currently builds a vocabulary for every branch, you are setting up and pushing to.\nBut the webhook service does not get notified, when a branch is deleted.\nThis way we end up having lots of files for branches that no one needs anymore.\nIn order to clean this up a bit, we will soon add a script to clean the dist directory up and remove those no longer needed files.</p>","frontmatter":{"title":"Re-working SkoHub Vocabs internationalization features","date":"January 31, 2024","authors":[{"lastname":"Rörtgen","firstname":"Steffen"}],"description":null}},"previous":{"fields":{"slug":"/2024-01-18-reconcile/"},"frontmatter":{"title":"Supporting the Reconciliation Service API for SKOS vocabularies"}},"next":{"fields":{"slug":"/2024-03-21-skohub-pages/"},"frontmatter":{"title":"Publishing SKOS the easy way"}}},"pageContext":{"id":"5b5b6759-4145-563a-a1f9-359045844318","previousPostId":"bcdcbba9-12cb-50f4-9aa2-de3fc49667db","nextPostId":"3686d7d6-2bd1-5708-93b9-f9dbe02db287"}},"staticQueryHashes":["1878297489","2734362168","3000541721"],"slicesMap":{}}